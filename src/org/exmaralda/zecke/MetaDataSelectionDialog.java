/*
 * MetaDataSelectionDialog.java
 *
 * Created on 15. Dezember 2006, 12:12
 */

package org.exmaralda.zecke;

import org.exmaralda.partitureditor.jexmaralda.JexmaraldaException;
import java.util.*;
import org.xml.sax.*;
import org.exmaralda.partitureditor.jexmaralda.*;
import javax.swing.*;

/**
 *
 * @author  thomas
 */
public class MetaDataSelectionDialog extends javax.swing.JDialog {
    
    /** Creates new form MetaDataSelectionDialog */
    public MetaDataSelectionDialog(java.awt.Frame parent, boolean modal, CorpusTree ct) {
        super(parent, modal);
        initComponents();
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);        
        
        try {
            initList(ct);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    public void initList(CorpusTree ct) throws SAXException, JexmaraldaException {
        System.out.println("dshjadhsjka");
        HashSet hs = ct.getMetaDataKeys();
        Iterator i = hs.iterator();
        DefaultListModel dlm = new DefaultListModel();
        while (i.hasNext()){
            String key = (String)(i.next());
            dlm.addElement(key);
            System.out.println(key);
        }
        this.keyList.setModel(dlm);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        keyList = new javax.swing.JList();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select meta data keys");
        jScrollPane1.setViewportView(keyList);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_okButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CorpusTree ct = new CorpusTree("C:\\Dokumente und Einstellungen\\thomas\\Desktop\\Zecke_Test.txt");
                new MetaDataSelectionDialog(new javax.swing.JFrame(), true, ct).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList keyList;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
 
    public String[] getMetaDataKeys(){
        String[] result = new String[keyList.getSelectedValues().length];
        for (int pos=0; pos<keyList.getSelectedValues().length; pos++){
            result[pos]=(String)(keyList.getSelectedValues()[pos]);
        }
        return result;
    }
}
