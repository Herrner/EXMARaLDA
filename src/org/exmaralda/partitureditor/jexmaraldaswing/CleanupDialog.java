/*
 * CleanupDialog.java
 *
 * Created on 11. Juli 2002, 12:48
 */

package org.exmaralda.partitureditor.jexmaraldaswing;

import org.exmaralda.common.helpers.Internationalizer;

/**
 *
 * @author  Thomas
 */
public class CleanupDialog extends JEscapeDialog {

    public boolean change = false; 
    
    /** Creates new form CleanupDialog */
    public CleanupDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getRootPane().setDefaultButton(okButton);
        Internationalizer.internationalizeDialogToolTips(this);        
    }

    public boolean removeEmptyEvents(){
        return removeEmptyEventsCheckBox.isSelected();        
    }

    public boolean bridgeGaps(){
        return bridgeGapsCheckBox.isSelected();        
    }
    
    public double getMaxDiff(){
        return bridgeGapsSlider.getValue();
    }

    public boolean smoothTimeline(){
        return smoothTimelineCheckBox.isSelected();
    }
    
    public double getThreshhold(){
        return smoothTimelineSlider.getValue();
    }

    public boolean removeUnusedTLI(){
        return removeUnusedTLICheckBox.isSelected();        
    }
    
    public boolean removeGaps(){
        return removeGapsCheckBox.isSelected();
    }
    
    public boolean normalizeIDs(){
        return false;
        //return normalizeIDsCheckBox.isSelected();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        removeEmptyEventsCheckBox = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        smoothTimelineCheckBox = new javax.swing.JCheckBox();
        smoothTimelineSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        bridgeGapsCheckBox = new javax.swing.JCheckBox();
        bridgeGapsSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        removeUnusedTLICheckBox = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        removeGapsCheckBox = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        normalizeIDsCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle("Clean up");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(6, 1));

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        removeEmptyEventsCheckBox.setSelected(true);
        removeEmptyEventsCheckBox.setText("Remove empty events");
        removeEmptyEventsCheckBox.setToolTipText("Remove events without a description");
        jPanel3.add(removeEmptyEventsCheckBox);

        jPanel1.add(jPanel3);

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        smoothTimelineCheckBox.setSelected(true);
        smoothTimelineCheckBox.setText("Smooth timeline with a threshhold of");
        smoothTimelineCheckBox.setToolTipText("Treat nearby timeline items as identical ");
        jPanel8.add(smoothTimelineCheckBox);

        smoothTimelineSlider.setMajorTickSpacing(50);
        smoothTimelineSlider.setMaximum(200);
        smoothTimelineSlider.setMinorTickSpacing(10);
        smoothTimelineSlider.setPaintLabels(true);
        smoothTimelineSlider.setPaintTicks(true);
        smoothTimelineSlider.setValue(10);
        smoothTimelineSlider.setPreferredSize(new java.awt.Dimension(180, 47));
        jPanel8.add(smoothTimelineSlider);

        jLabel2.setText(" ms");
        jPanel8.add(jLabel2);

        jPanel1.add(jPanel8);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        bridgeGapsCheckBox.setSelected(true);
        bridgeGapsCheckBox.setText("Bridge gaps smaller than ");
        bridgeGapsCheckBox.setToolTipText("Treat nearby timeline items as identical if the corresponding interval is a gap");
        jPanel4.add(bridgeGapsCheckBox);

        bridgeGapsSlider.setMajorTickSpacing(250);
        bridgeGapsSlider.setMaximum(1000);
        bridgeGapsSlider.setMinorTickSpacing(100);
        bridgeGapsSlider.setPaintLabels(true);
        bridgeGapsSlider.setPaintTicks(true);
        jPanel4.add(bridgeGapsSlider);

        jLabel1.setText(" ms");
        jPanel4.add(jLabel1);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        removeUnusedTLICheckBox.setSelected(true);
        removeUnusedTLICheckBox.setText("Remove unused timeline items");
        removeUnusedTLICheckBox.setToolTipText("Remove timeline items where no event starts or ends");
        jPanel5.add(removeUnusedTLICheckBox);

        jPanel1.add(jPanel5);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        removeGapsCheckBox.setText("Remove gaps");
        removeGapsCheckBox.setToolTipText("Remove gaps in the timeline (DANGEROUS!)");
        jPanel6.add(removeGapsCheckBox);

        jPanel1.add(jPanel6);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        normalizeIDsCheckBox.setText("Normalize IDs");
        normalizeIDsCheckBox.setToolTipText("Normalize speaker, tier and timeline IDs - disabled, suspected to cause a serious bug with larg files");
        normalizeIDsCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        normalizeIDsCheckBox.setEnabled(false);
        jPanel7.add(normalizeIDsCheckBox);

        jPanel1.add(jPanel7);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(110, 27));
        okButton.setMinimumSize(new java.awt.Dimension(73, 26));
        okButton.setPreferredSize(new java.awt.Dimension(110, 27));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel2.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(110, 27));
        cancelButton.setPreferredSize(new java.awt.Dimension(110, 27));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        change = false;
        setVisible(false);
        dispose();        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here:
        change = true;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        change = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new CleanupDialog(new javax.swing.JFrame(), true).show();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bridgeGapsCheckBox;
    private javax.swing.JSlider bridgeGapsSlider;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JCheckBox normalizeIDsCheckBox;
    private javax.swing.JButton okButton;
    private javax.swing.JCheckBox removeEmptyEventsCheckBox;
    private javax.swing.JCheckBox removeGapsCheckBox;
    private javax.swing.JCheckBox removeUnusedTLICheckBox;
    private javax.swing.JCheckBox smoothTimelineCheckBox;
    private javax.swing.JSlider smoothTimelineSlider;
    // End of variables declaration//GEN-END:variables

    public boolean editCleanupParameters(){
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);
        show();
        return change;
    }
}
