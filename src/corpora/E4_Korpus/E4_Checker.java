/*
 * E4_Checker.java
 *
 * Created on 10. Januar 2008, 15:57
 */

package corpora.E4_Korpus;

import java.io.File;
import javax.swing.JFileChooser;


/**
 *
 * @author  thomas
 */
public class E4_Checker extends javax.swing.JFrame {
    
    E4_Transcription e4tr;
    javax.swing.ImageIcon goodIcon;
    javax.swing.ImageIcon badIcon;
    java.util.prefs.Preferences settings = java.util.prefs.Preferences.userRoot().node("org.sfb538.exmaralda.PartiturEditor");
    
    
    /** Creates new form E4_Checker */
    public E4_Checker() {
        initComponents();        
        goodIcon = new javax.swing.ImageIcon(getClass().getResource("/corpora/E4_Korpus/thumbs_up.gif"));
        badIcon = new javax.swing.ImageIcon(getClass().getResource("/corpora/E4_Korpus/thumbs_down.gif"));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("E4 Transkriptionschecker");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/corpora/E4_Korpus/lempel.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, java.awt.BorderLayout.WEST);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 100));

        jEditorPane1.setEditable(false);
        jEditorPane1.setContentType("text/html");
        jScrollPane1.setViewportView(jEditorPane1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.SOUTH);
        getContentPane().add(jLabel1, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String dir = settings.get("E4-Checker", System.getProperty("user.directory"));
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
        chooser.setDialogTitle("Transkription(en) ausw�hlen");
        chooser.setMultiSelectionEnabled(true);
        if ((dir!=null) && (dir.length()>0)){
                chooser.setCurrentDirectory(new java.io.File(dir));
        }
        int retValue = chooser.showOpenDialog(this);
        if (retValue!=JFileChooser.APPROVE_OPTION) return;
        java.io.File[] files = chooser.getSelectedFiles();
        //java.io.File file = chooser.getSelectedFile();
        StringBuffer errorList = new StringBuffer();
        boolean allWell = true;
        for (File file : files){
            settings.put("E4-Checker", file.getAbsolutePath());
            try {
                e4tr = E4_Transcription.read(file,"NA","NA");
                java.util.Vector errors = e4tr.getSegmentationErrors();
                if (errors.size()==0){
                    jLabel1.setIcon(goodIcon);
                    String text = file.getName() + ": <b>OK!</b><br/>";
                    //jEditorPane1.setText(text);
                    errorList.append(text);
                } else {
                    allWell = false;
                    errorList.append(file.getName() + ": <b>Probleme!</b><br/>");
                    for (Object o : errors){
                        org.exmaralda.partitureditor.fsm.FSMException e = (org.exmaralda.partitureditor.fsm.FSMException)o;
                        errorList.append("Äußerung <b>" +  e.getTLI().substring(1, e.getTLI().length()-1) + "</b>: ");
                        errorList.append(e.getMessage());
                        errorList.append("<br/>");
                    }
                    //System.out.println(errorList.toString());
                    jLabel1.setIcon(badIcon);
                }
                jEditorPane1.setText(errorList.toString());

            } catch (Exception ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, ex.getLocalizedMessage());
            }
            if (!allWell){
                    jLabel1.setIcon(badIcon);
            } else {
                    jLabel1.setIcon(goodIcon);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new E4_Checker().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
