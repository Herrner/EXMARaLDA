/*
 * TextGrid2Analysis.java
 *
 * Created on 29. Oktober 2008, 14:56
 */

package corpora.H6_Korpus;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.exmaralda.partitureditor.jexmaralda.convert.EncodingDetector;
/**
 *
 * @author  thomas
 */
public class TextGrid2Analysis extends javax.swing.JFrame {

    java.util.prefs.Preferences settings = java.util.prefs.Preferences.userRoot().node("org.sfb538.exmaralda.PartiturEditor");
    private String[] encodings = {"US-ASCII", "ISO-8859-1", "UTF-8", "UTF-16BE", "UTF-16LE"};

    /** Creates new form TextGrid2Analysis */
    public TextGrid2Analysis() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        acousticAnalysisButton = new javax.swing.JButton();
        pviAnalysisButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("H6Dings");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Messages"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        acousticAnalysisButton.setText("Acoustic Analysis...");
        acousticAnalysisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acousticAnalysisButtonActionPerformed(evt);
            }
        });
        jPanel1.add(acousticAnalysisButton);

        pviAnalysisButton.setText("PVI Analysis...");
        pviAnalysisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pviAnalysisButtonActionPerformed(evt);
            }
        });
        jPanel1.add(pviAnalysisButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acousticAnalysisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acousticAnalysisButtonActionPerformed
    java.io.File startDirectory = new java.io.File(settings.get("H6Dir", ""));
    javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
    fc.setCurrentDirectory(startDirectory);
    fc.setFileFilter(new org.exmaralda.partitureditor.jexmaraldaswing.fileFilters.ParameterFileFilter("textGrid", "Praat TextGrid"));
    int ret = fc.showOpenDialog(this);
    if (ret==javax.swing.JFileChooser.APPROVE_OPTION){
            settings.put("H6Dir", fc.getSelectedFile().getParent());
            try {
                TextGridParser tgd = new TextGridParser();
                
                java.io.File file = fc.getSelectedFile();
                
                String encoding = "";
                encoding = EncodingDetector.detectEncoding(file);
                if (encoding.length()==0){
                    Object o = javax.swing.JOptionPane.showInputDialog(this, 
                                "Cannot detect the file encoding. Please select", 
                                "Choose a file encoding",
                                javax.swing.JOptionPane.PLAIN_MESSAGE,
                                null,
                                encodings,
                                "ISO-8859-1");
                    encoding = (String)o;
                }
                
                tgd.readTextGrid(file, encoding);
                String in = fc.getSelectedFile().getAbsolutePath();
                jTextArea1.append(in + " read.\n");
                org.jdom.Document d = tgd.fillTargetWordList();
                
                String out = in.substring(0, in.lastIndexOf(".")) + ".xml";
                org.exmaralda.common.jdomutilities.IOUtilities.writeDocumentToLocalFile(out, d);
                jTextArea1.append(out + " written.\n");
            } catch (Exception ex) {
                jTextArea1.append("ERROR: " + ex.getMessage() + "\n");
            }
    }
}//GEN-LAST:event_acousticAnalysisButtonActionPerformed

    private void pviAnalysisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pviAnalysisButtonActionPerformed
    java.io.File startDirectory = new java.io.File(settings.get("H6Dir", ""));
    javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
    fc.setCurrentDirectory(startDirectory);
    fc.setFileFilter(new org.exmaralda.partitureditor.jexmaraldaswing.fileFilters.ParameterFileFilter("textGrid", "Praat TextGrid"));
    int ret = fc.showOpenDialog(this);
    if (ret==javax.swing.JFileChooser.APPROVE_OPTION){
            try {
                settings.put("H6Dir", fc.getSelectedFile().getParent());
                PVIMaker tgd = new PVIMaker();
                java.io.File file = fc.getSelectedFile();
                String encoding = "";
                encoding = EncodingDetector.detectEncoding(file);
                if (encoding.length() == 0) {
                    Object o = javax.swing.JOptionPane.showInputDialog(this, "Cannot detect the file encoding. Please select", "Choose a file encoding", javax.swing.JOptionPane.PLAIN_MESSAGE, null, encodings, "ISO-8859-1");
                    encoding = (String) o;
                }
                tgd.readTextGrid(file, encoding);
                String in = fc.getSelectedFile().getAbsolutePath();
                jTextArea1.append(in + " read.\n");

                String vowels_out = in.substring(0, in.lastIndexOf(".")) + "_vowels.txt";
                String consonnants_out = in.substring(0, in.lastIndexOf(".")) + "_cons.txt";
                tgd.calculate(vowels_out, consonnants_out);

                jTextArea1.append(vowels_out + " written.\n");
                jTextArea1.append(consonnants_out + " written.\n");

            } catch (Exception ex) {
                jTextArea1.append("ERROR: " + ex.getMessage() + "\n");
            }
    }
    }//GEN-LAST:event_pviAnalysisButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TextGrid2Analysis app = new TextGrid2Analysis();
                app.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acousticAnalysisButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton pviAnalysisButton;
    // End of variables declaration//GEN-END:variables

}
